[{"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/Hello.js":"1","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/index.js":"2","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/SignUp.js":"3","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/ListContainer.js":"4","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/Login.js":"5","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/reportWebVitals.js":"6","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/List.js":"7","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/NewListForm.js":"8"},{"size":174,"mtime":1608480703007,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1609607816196,"results":"11","hashOfConfig":"10"},{"size":1880,"mtime":1608562986439,"results":"12","hashOfConfig":"10"},{"size":2002,"mtime":1608476906099,"results":"13","hashOfConfig":"10"},{"size":2098,"mtime":1609666890726,"results":"14","hashOfConfig":"10"},{"size":362,"mtime":1608365421142,"results":"15","hashOfConfig":"10"},{"size":293,"mtime":1608389757531,"results":"16","hashOfConfig":"10"},{"size":738,"mtime":1608396526401,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pflv6e",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/Hello.js",[],"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/index.js",[],"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/SignUp.js",["37"],"import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nfunction SignUp(props) {\n  const [user, setUser] = useState({email: '', password: '', password_confirmation: ''});\n  const [errors, setErrors] = useState();\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    axios.post('/api/v1/users', {user}, {withCredentials: true})\n    .then(response => {\n      if (response.data.status === 'created') {\n        props.handleLogin(response.data)\n        redirect()\n      } else {\n        setErrors(response.data.errors)\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  }\n\n  const redirect = () => {\n    history.push('/')\n  }\n\n  const handleErrors = () => {\n    return (\n      <div>\n        <ul>{errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul> \n      </div>\n    )\n  }\n\n  return (\n    <div className=\"signUp\">\n      <h1>Sign Up</h1>        \n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"email\"\n          type=\"text\"\n          name=\"email\"\n          value={user.email}\n          onChange={e=> setUser({...user, email: e.target.value})}\n        />\n        <input \n          placeholder=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={user.password}\n          onChange={e=> setUser({...user, password: e.target.value})}\n        />          \n        <input\n          placeholder=\"password confirmation\"\n          type=\"password\"\n          name=\"password_confirmation\"\n          value={user.password_confirmation}\n          onChange={e=> setUser({...user, password_confirmation: e.target.value})}\n        />\n      \n        <button placeholder=\"submit\" type=\"submit\">\n          Sign Up\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default SignUp\n","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/ListContainer.js",["38"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport List from './List';\nimport EditListForm from './EditListForm';\nimport NewListForm from './NewListForm';\n\nfunction ListContainer() {\n  const [lists, setLists] = useState([]);\n  const [editingListId, setEditingListId] = useState();\n  \n  useEffect(() =>{\n    axios.get('/api/v1/lists.json')\n        .then(response => {\n            console.log(response)\n            setLists(response.data)\n        })\n        .catch(error => console.log(error))\n  },[])\n  console.log(lists);\n\n  const removeList = (id) => {\n    axios.delete( '/api/v1/lists/' + id )\n    .then((response) => {\n        const filtered_lists = lists.filter(\n            list => list.id !== id\n        )\n        console.log(filtered_lists);\n        setLists(filtered_lists)\n        console.log(\"ðŸ¦… \");\n        console.log(lists)\n    })\n    .catch(error => console.log(error))\n  }\n\n  const editList= (id, title, excerpt) => {\n    axios.put( '/api/v1/lists/' + id, { \n        list: {\n            title, \n            excerpt\n        } \n    })\n    .then(response => {\n        console.log(response);\n        const lists = lists;\n        lists[id-1] = {id, title, excerpt}\n        setLists(lists);\n        setEditingListId(null);\n    })\n    .catch(error => console.log(error));\n  }\n\n  const addNewList=(title, excerpt) =>{\n    axios.post( '/api/v1/lists', { list: {title, excerpt} })\n    .then(response => {\n        console.log(response)\n        \n        setLists([ ...lists, response.data ])\n    })\n    .catch(error => {\n        console.log(error)\n    })\n  }\n\n  return (\n    <div className=\"listContainer\">\n      <h1>LISTS</h1>\n      {lists.map( (list) => editingListId === list.id ? (\n          <EditListForm list={list} key={list.id} editList={editList}/>\n        ):(\n          <List list={list} key={list.id} onRemoveList={removeList}/>\n        )\n      )}\n      <NewListForm onNewList={addNewList} />\n      <br/>\n    </div>\n  )\n}\n\nexport default ListContainer\n","/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/Login.js",["39"],"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/reportWebVitals.js",[],["40","41"],"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/List.js",[],"/Users/prashanth/Documents/boilerplates/boilerplate-railsapi-reactapp/client/src/NewListForm.js",[],{"ruleId":"42","severity":1,"message":"43","line":28,"column":9,"nodeType":"44","messageId":"45","endLine":28,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":44,"column":23,"nodeType":"44","messageId":"48","endLine":44,"endColumn":28},{"ruleId":"42","severity":1,"message":"43","line":35,"column":9,"nodeType":"44","messageId":"45","endLine":35,"endColumn":21},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"no-unused-vars","'handleErrors' is assigned a value but never used.","Identifier","unusedVar","no-use-before-define","'lists' was used before it was defined.","usedBeforeDefined","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-global-assign","no-unsafe-negation"]